From: Josh Boyer <jwboyer@fedoraproject.org>
Date: Fri, 26 Oct 2012 12:36:24 -0400
Subject: [PATCH] KEYS: Add a system blacklist keyring

This adds an additional keyring that is used to store certificates that
are blacklisted.  This keyring is searched first when loading signed modules
and if the module's certificate is found, it will refuse to load.  This is
useful in cases where third party certificates are used for module signing.

Signed-off-by: Josh Boyer <jwboyer@fedoraproject.org>
---
 include/keys/system_keyring.h |  4 ++++
 init/Kconfig                  |  9 +++++++++
 kernel/module_signing.c       | 12 ++++++++++++
 certs/system_keyring.c       | 17 +++++++++++++++++
 4 files changed, 42 insertions(+)

diff -NurEbBH '--exclude=*.orig' '--exclude=*.rej' linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64.orig/certs/system_keyring.c linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64/certs/system_keyring.c
--- linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64.orig/certs/system_keyring.c	2015-11-27 17:37:35.685131927 +0300
+++ linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64/certs/system_keyring.c	2015-11-27 17:38:08.290795243 +0300
@@ -20,6 +20,9 @@
 
 struct key *system_trusted_keyring;
 EXPORT_SYMBOL_GPL(system_trusted_keyring);
+#ifdef CONFIG_SYSTEM_BLACKLIST_KEYRING
+struct key *system_blacklist_keyring;
+#endif
 
 extern __initconst const u8 system_certificate_list[];
 extern __initconst const unsigned long system_certificate_list_size;
@@ -41,6 +44,20 @@
 		panic("Can't allocate system trusted keyring\n");
 
 	set_bit(KEY_FLAG_TRUSTED_ONLY, &system_trusted_keyring->flags);
+
+#ifdef CONFIG_SYSTEM_BLACKLIST_KEYRING
+	system_blacklist_keyring = keyring_alloc(".system_blacklist_keyring",
+				    KUIDT_INIT(0), KGIDT_INIT(0),
+				    current_cred(),
+				    (KEY_POS_ALL & ~KEY_POS_SETATTR) |
+				    KEY_USR_VIEW | KEY_USR_READ,
+				    KEY_ALLOC_NOT_IN_QUOTA, NULL);
+	if (IS_ERR(system_blacklist_keyring))
+		panic("Can't allocate system blacklist keyring\n");
+
+	set_bit(KEY_FLAG_TRUSTED_ONLY, &system_blacklist_keyring->flags);
+#endif
+
 	return 0;
 }
 
diff -NurEbBH '--exclude=*.orig' '--exclude=*.rej' linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64.orig/include/keys/system_keyring.h linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64/include/keys/system_keyring.h
--- linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64.orig/include/keys/system_keyring.h	2015-11-27 17:37:43.235053967 +0300
+++ linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64/include/keys/system_keyring.h	2015-11-27 17:38:08.289795254 +0300
@@ -35,4 +35,8 @@
 			      enum key_being_used_for usage);
 #endif
 
+#ifdef CONFIG_SYSTEM_BLACKLIST_KEYRING
+extern struct key *system_blacklist_keyring;
+#endif
+
 #endif /* _KEYS_SYSTEM_KEYRING_H */
diff -NurEbBH '--exclude=*.orig' '--exclude=*.rej' linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64.orig/init/Kconfig linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64/init/Kconfig
--- linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64.orig/init/Kconfig	2015-11-27 17:37:43.691049259 +0300
+++ linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64/init/Kconfig	2015-11-27 17:38:08.289795254 +0300
@@ -1795,6 +1795,15 @@
 	  module verification, kexec image verification and firmware blob
 	  verification.
 
+config SYSTEM_BLACKLIST_KEYRING
+	bool "Provide system-wide ring of blacklisted keys"
+	depends on KEYS
+	help
+	  Provide a system keyring to which blacklisted keys can be added.
+	  Keys in the keyring are considered entirely untrusted.  Keys in this
+	  keyring are used by the module signature checking to reject loading
+	  of modules signed with a blacklisted key.
+
 config PROFILING
 	bool "Profiling support"
 	help
diff -NurEbBH '--exclude=*.orig' '--exclude=*.rej' linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64.orig/security/integrity/digsig_asymmetric.c linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64/security/integrity/digsig_asymmetric.c
--- linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64.orig/security/integrity/digsig_asymmetric.c	2015-11-27 17:37:44.434041587 +0300
+++ linux-4.3.0-301.hu.1.uksm.bfs.bfq.fc23.x86_64/security/integrity/digsig_asymmetric.c	2015-11-27 17:38:34.138528341 +0300
@@ -32,6 +32,18 @@
 
 	pr_debug("key search: \"%s\"\n", name);
 
+	#ifdef CONFIG_SYSTEM_BLACKLIST_KEYRING
+		key = keyring_search(make_key_ref(system_blacklist_keyring, 1),
+					   &key_type_asymmetric, id);
+		if (!IS_ERR(key)) {
+			/* module is signed with a cert in the blacklist.  reject */
+			pr_err("Module key '%s' is in blacklist\n", id);
+			key_ref_put(key);
+			kfree(id);
+			return ERR_PTR(-EKEYREJECTED);
+		}
+	#endif
+
 	if (keyring) {
 		/* search in specific keyring */
 		key_ref_t kref;
